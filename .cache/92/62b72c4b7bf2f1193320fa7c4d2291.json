{"id":"Todoinput.js","dependencies":[{"name":"C:\\Users\\User\\Desktop\\Build-Todo\\package.json","includedInParent":true,"mtime":1624388230414},{"name":"react","loc":{"line":2,"column":25},"parent":"C:\\Users\\User\\Desktop\\Build-Todo\\Todoinput.js","resolved":"C:\\Users\\User\\Desktop\\Build-Todo\\node_modules\\react\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = TodoInput;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction TodoInput(_ref) {\n  var setTodos = _ref.setTodos;\n\n  var _useState = (0, _react.useState)(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputData = _useState2[0],\n      setInputData = _useState2[1];\n\n  function handleAddTodo() {\n    setTodos(function (todos) {\n      return [{\n        title: inputData,\n        isCompleted: false,\n        id: todos[todos.length - 1].id + 1\n      }].concat(_toConsumableArray(todos));\n    });\n  }\n\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"add-items d-flex\"\n  }, /*#__PURE__*/_react.default.createElement(\"input\", {\n    value: inputData,\n    type: \"text\",\n    className: \"form-control todo-list-input\",\n    placeholder: \"What do you need to do today?\",\n    onChange: function onChange(e) {\n      return setInputData(e.target.value);\n    }\n  }), /*#__PURE__*/_react.default.createElement(\"button\", {\n    onClick: handleAddTodo,\n    className: \"add btn btn-primary font-weight-bold todo-list-add-btn\"\n  }, \"Add\"));\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"Todoinput.js","original":{"line":1,"column":0}},{"generated":{"line":34,"column":0},"source":"Todoinput.js","original":{"line":3,"column":15}},{"name":"TodoInput","generated":{"line":34,"column":9},"source":"Todoinput.js","original":{"line":3,"column":24}},{"generated":{"line":34,"column":18},"source":"Todoinput.js","original":{"line":3,"column":15}},{"generated":{"line":34,"column":25},"source":"Todoinput.js","original":{"line":3,"column":48}},{"generated":{"line":35,"column":0},"source":"Todoinput.js","original":{"line":3,"column":48}},{"name":"setTodos","generated":{"line":35,"column":6},"source":"Todoinput.js","original":{"line":3,"column":36}},{"generated":{"line":35,"column":14},"source":"Todoinput.js","original":{"line":3,"column":48}},{"name":"setTodos","generated":{"line":35,"column":22},"source":"Todoinput.js","original":{"line":3,"column":36}},{"generated":{"line":35,"column":30},"source":"Todoinput.js","original":{"line":3,"column":48}},{"generated":{"line":37,"column":0},"source":"Todoinput.js","original":{"line":4,"column":2}},{"generated":{"line":37,"column":18},"source":"Todoinput.js","original":{"line":4,"column":36}},{"generated":{"line":37,"column":39},"source":"Todoinput.js","original":{"line":4,"column":45}},{"generated":{"line":37,"column":41},"source":"Todoinput.js","original":{"line":4,"column":36}},{"generated":{"line":37,"column":42},"source":"Todoinput.js","original":{"line":4,"column":2}},{"generated":{"line":38,"column":0},"source":"Todoinput.js","original":{"line":4,"column":2}},{"generated":{"line":39,"column":0},"source":"Todoinput.js","original":{"line":4,"column":2}},{"name":"inputData","generated":{"line":39,"column":6},"source":"Todoinput.js","original":{"line":4,"column":9}},{"generated":{"line":39,"column":15},"source":"Todoinput.js","original":{"line":4,"column":2}},{"generated":{"line":40,"column":0},"source":"Todoinput.js","original":{"line":4,"column":2}},{"name":"setInputData","generated":{"line":40,"column":6},"source":"Todoinput.js","original":{"line":4,"column":20}},{"generated":{"line":40,"column":18},"source":"Todoinput.js","original":{"line":4,"column":2}},{"generated":{"line":42,"column":0},"source":"Todoinput.js","original":{"line":5,"column":2}},{"name":"handleAddTodo","generated":{"line":42,"column":11},"source":"Todoinput.js","original":{"line":5,"column":11}},{"generated":{"line":42,"column":24},"source":"Todoinput.js","original":{"line":5,"column":2}},{"generated":{"line":42,"column":27},"source":"Todoinput.js","original":{"line":5,"column":27}},{"name":"setTodos","generated":{"line":43,"column":0},"source":"Todoinput.js","original":{"line":6,"column":4}},{"name":"setTodos","generated":{"line":43,"column":4},"source":"Todoinput.js","original":{"line":6,"column":4}},{"generated":{"line":43,"column":12},"source":"Todoinput.js","original":{"line":6,"column":12}},{"generated":{"line":43,"column":13},"source":"Todoinput.js","original":{"line":6,"column":13}},{"name":"todos","generated":{"line":43,"column":23},"source":"Todoinput.js","original":{"line":6,"column":14}},{"generated":{"line":43,"column":28},"source":"Todoinput.js","original":{"line":6,"column":13}},{"generated":{"line":43,"column":30},"source":"Todoinput.js","original":{"line":6,"column":24}},{"generated":{"line":44,"column":0},"source":"Todoinput.js","original":{"line":7,"column":6}},{"generated":{"line":44,"column":14},"source":"Todoinput.js","original":{"line":8,"column":8}},{"name":"title","generated":{"line":45,"column":0},"source":"Todoinput.js","original":{"line":9,"column":10}},{"name":"title","generated":{"line":45,"column":8},"source":"Todoinput.js","original":{"line":9,"column":10}},{"generated":{"line":45,"column":13},"source":"Todoinput.js","original":{"line":9,"column":15}},{"name":"inputData","generated":{"line":45,"column":15},"source":"Todoinput.js","original":{"line":9,"column":17}},{"generated":{"line":45,"column":24},"source":"Todoinput.js","original":{"line":8,"column":8}},{"name":"isCompleted","generated":{"line":46,"column":0},"source":"Todoinput.js","original":{"line":10,"column":10}},{"name":"isCompleted","generated":{"line":46,"column":8},"source":"Todoinput.js","original":{"line":10,"column":10}},{"generated":{"line":46,"column":19},"source":"Todoinput.js","original":{"line":10,"column":21}},{"generated":{"line":46,"column":21},"source":"Todoinput.js","original":{"line":10,"column":23}},{"generated":{"line":46,"column":26},"source":"Todoinput.js","original":{"line":8,"column":8}},{"name":"id","generated":{"line":47,"column":0},"source":"Todoinput.js","original":{"line":11,"column":10}},{"name":"id","generated":{"line":47,"column":8},"source":"Todoinput.js","original":{"line":11,"column":10}},{"generated":{"line":47,"column":10},"source":"Todoinput.js","original":{"line":11,"column":12}},{"name":"todos","generated":{"line":47,"column":12},"source":"Todoinput.js","original":{"line":11,"column":14}},{"generated":{"line":47,"column":17},"source":"Todoinput.js","original":{"line":11,"column":19}},{"name":"todos","generated":{"line":47,"column":18},"source":"Todoinput.js","original":{"line":11,"column":20}},{"generated":{"line":47,"column":23},"source":"Todoinput.js","original":{"line":11,"column":25}},{"name":"length","generated":{"line":47,"column":24},"source":"Todoinput.js","original":{"line":11,"column":26}},{"generated":{"line":47,"column":30},"source":"Todoinput.js","original":{"line":11,"column":20}},{"generated":{"line":47,"column":33},"source":"Todoinput.js","original":{"line":11,"column":35}},{"generated":{"line":47,"column":34},"source":"Todoinput.js","original":{"line":11,"column":19}},{"generated":{"line":47,"column":35},"source":"Todoinput.js","original":{"line":11,"column":14}},{"name":"id","generated":{"line":47,"column":36},"source":"Todoinput.js","original":{"line":11,"column":38}},{"generated":{"line":47,"column":38},"source":"Todoinput.js","original":{"line":11,"column":14}},{"generated":{"line":47,"column":41},"source":"Todoinput.js","original":{"line":11,"column":43}},{"generated":{"line":48,"column":0},"source":"Todoinput.js","original":{"line":8,"column":8}},{"generated":{"line":48,"column":7},"source":"Todoinput.js","original":{"line":7,"column":6}},{"name":"todos","generated":{"line":48,"column":35},"source":"Todoinput.js","original":{"line":13,"column":11}},{"generated":{"line":48,"column":40},"source":"Todoinput.js","original":{"line":7,"column":6}},{"generated":{"line":49,"column":0},"source":"Todoinput.js","original":{"line":15,"column":5}},{"generated":{"line":49,"column":5},"source":"Todoinput.js","original":{"line":6,"column":12}},{"generated":{"line":49,"column":6},"source":"Todoinput.js","original":{"line":6,"column":4}},{"generated":{"line":50,"column":0},"source":"Todoinput.js","original":{"line":16,"column":3}},{"generated":{"line":52,"column":0},"source":"Todoinput.js","original":{"line":17,"column":2}},{"generated":{"line":52,"column":22},"source":"Todoinput.js","original":{"line":18,"column":4}},{"generated":{"line":53,"column":0},"source":"Todoinput.js","original":{"line":18,"column":9}},{"generated":{"line":53,"column":4},"source":"Todoinput.js","original":{"line":18,"column":9}},{"generated":{"line":53,"column":13},"source":"Todoinput.js","original":{"line":18,"column":18}},{"generated":{"line":53,"column":15},"source":"Todoinput.js","original":{"line":18,"column":19}},{"generated":{"line":54,"column":0},"source":"Todoinput.js","original":{"line":18,"column":4}},{"generated":{"line":54,"column":18},"source":"Todoinput.js","original":{"line":19,"column":6}},{"generated":{"line":55,"column":0},"source":"Todoinput.js","original":{"line":20,"column":8}},{"generated":{"line":55,"column":4},"source":"Todoinput.js","original":{"line":20,"column":8}},{"generated":{"line":55,"column":9},"source":"Todoinput.js","original":{"line":20,"column":13}},{"name":"inputData","generated":{"line":55,"column":11},"source":"Todoinput.js","original":{"line":20,"column":15}},{"generated":{"line":55,"column":20},"source":"Todoinput.js","original":{"line":19,"column":6}},{"generated":{"line":56,"column":0},"source":"Todoinput.js","original":{"line":21,"column":8}},{"generated":{"line":56,"column":4},"source":"Todoinput.js","original":{"line":21,"column":8}},{"generated":{"line":56,"column":8},"source":"Todoinput.js","original":{"line":21,"column":12}},{"generated":{"line":56,"column":10},"source":"Todoinput.js","original":{"line":21,"column":13}},{"generated":{"line":56,"column":16},"source":"Todoinput.js","original":{"line":19,"column":6}},{"generated":{"line":57,"column":0},"source":"Todoinput.js","original":{"line":22,"column":8}},{"generated":{"line":57,"column":4},"source":"Todoinput.js","original":{"line":22,"column":8}},{"generated":{"line":57,"column":13},"source":"Todoinput.js","original":{"line":22,"column":17}},{"generated":{"line":57,"column":15},"source":"Todoinput.js","original":{"line":22,"column":18}},{"generated":{"line":57,"column":45},"source":"Todoinput.js","original":{"line":19,"column":6}},{"generated":{"line":58,"column":0},"source":"Todoinput.js","original":{"line":23,"column":8}},{"generated":{"line":58,"column":4},"source":"Todoinput.js","original":{"line":23,"column":8}},{"generated":{"line":58,"column":15},"source":"Todoinput.js","original":{"line":23,"column":19}},{"generated":{"line":58,"column":17},"source":"Todoinput.js","original":{"line":23,"column":20}},{"generated":{"line":58,"column":48},"source":"Todoinput.js","original":{"line":19,"column":6}},{"generated":{"line":59,"column":0},"source":"Todoinput.js","original":{"line":24,"column":8}},{"generated":{"line":59,"column":4},"source":"Todoinput.js","original":{"line":24,"column":8}},{"generated":{"line":59,"column":12},"source":"Todoinput.js","original":{"line":24,"column":16}},{"generated":{"line":59,"column":14},"source":"Todoinput.js","original":{"line":24,"column":18}},{"name":"e","generated":{"line":59,"column":32},"source":"Todoinput.js","original":{"line":24,"column":19}},{"generated":{"line":59,"column":33},"source":"Todoinput.js","original":{"line":24,"column":18}},{"generated":{"line":60,"column":0},"source":"Todoinput.js","original":{"line":24,"column":18}},{"name":"setInputData","generated":{"line":60,"column":13},"source":"Todoinput.js","original":{"line":24,"column":25}},{"generated":{"line":60,"column":25},"source":"Todoinput.js","original":{"line":24,"column":37}},{"name":"e","generated":{"line":60,"column":26},"source":"Todoinput.js","original":{"line":24,"column":38}},{"generated":{"line":60,"column":27},"source":"Todoinput.js","original":{"line":24,"column":39}},{"name":"target","generated":{"line":60,"column":28},"source":"Todoinput.js","original":{"line":24,"column":40}},{"generated":{"line":60,"column":34},"source":"Todoinput.js","original":{"line":24,"column":38}},{"name":"value","generated":{"line":60,"column":35},"source":"Todoinput.js","original":{"line":24,"column":47}},{"generated":{"line":60,"column":40},"source":"Todoinput.js","original":{"line":24,"column":37}},{"generated":{"line":60,"column":41},"source":"Todoinput.js","original":{"line":24,"column":18}},{"generated":{"line":61,"column":0},"source":"Todoinput.js","original":{"line":24,"column":18}},{"generated":{"line":62,"column":0},"source":"Todoinput.js","original":{"line":19,"column":6}},{"generated":{"line":62,"column":4},"source":"Todoinput.js","original":{"line":18,"column":4}},{"generated":{"line":62,"column":19},"source":"Todoinput.js","original":{"line":26,"column":6}},{"generated":{"line":63,"column":0},"source":"Todoinput.js","original":{"line":27,"column":8}},{"generated":{"line":63,"column":4},"source":"Todoinput.js","original":{"line":27,"column":8}},{"generated":{"line":63,"column":11},"source":"Todoinput.js","original":{"line":27,"column":15}},{"name":"handleAddTodo","generated":{"line":63,"column":13},"source":"Todoinput.js","original":{"line":27,"column":17}},{"generated":{"line":63,"column":26},"source":"Todoinput.js","original":{"line":26,"column":6}},{"generated":{"line":64,"column":0},"source":"Todoinput.js","original":{"line":28,"column":8}},{"generated":{"line":64,"column":4},"source":"Todoinput.js","original":{"line":28,"column":8}},{"generated":{"line":64,"column":13},"source":"Todoinput.js","original":{"line":28,"column":17}},{"generated":{"line":64,"column":15},"source":"Todoinput.js","original":{"line":28,"column":18}},{"generated":{"line":65,"column":0},"source":"Todoinput.js","original":{"line":26,"column":6}},{"generated":{"line":65,"column":11},"source":"Todoinput.js","original":{"line":18,"column":4}},{"generated":{"line":65,"column":12},"source":"Todoinput.js","original":{"line":17,"column":2}},{"generated":{"line":66,"column":0},"source":"Todoinput.js","original":{"line":34,"column":1}}],"sources":{"Todoinput.js":"import React from \"react\";\r\nimport { useState } from \"react\";\r\nexport default function TodoInput({ setTodos }) {\r\n  const [inputData, setInputData] = useState(\"\");\r\n  function handleAddTodo() {\r\n    setTodos((todos) => {\r\n      return [\r\n        {\r\n          title: inputData,\r\n          isCompleted: false,\r\n          id: todos[todos.length - 1].id + 1,\r\n        },\r\n        ...todos,\r\n      ];\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"add-items d-flex\">\r\n      <input\r\n        value={inputData}\r\n        type=\"text\"\r\n        className=\"form-control todo-list-input\"\r\n        placeholder=\"What do you need to do today?\"\r\n        onChange={(e) => setInputData(e.target.value)}\r\n      />\r\n      <button\r\n        onClick={handleAddTodo}\r\n        className=\"add btn btn-primary font-weight-bold todo-list-add-btn\"\r\n      >\r\n        Add\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"4b9f73898c3d738cf7c71d04b545420d","cacheData":{"env":{}}}